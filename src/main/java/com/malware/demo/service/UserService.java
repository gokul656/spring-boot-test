package com.malware.demo.service;

import com.malware.demo.model.User;
import com.malware.demo.repository.UserRepository;
import lombok.SneakyThrows;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.Collection;
import java.util.UUID;

@Slf4j
@Service
public class UserService implements AuthenticationService<User> {

    private final UserRepository userRepository;

    public UserService(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    @Override
    @SneakyThrows
    public String signup(User user) {
        // add validations
        user.setId(UUID.randomUUID().toString());
        user.setPassword(encrypt(user.getPassword()));

        return userRepository.add(user);
    }

    @Override
    public User login(User user) {
        // add validations
        return user;
    }

    @Override
    @SneakyThrows
    public Collection<User> getAll() {
        log.info("retrieving data please wait..");
        Thread.sleep(1000L);
        return new ArrayList<>();
    }
}
